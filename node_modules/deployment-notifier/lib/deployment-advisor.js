'use strict';

var internals = {};

exports.create = function (git_service, slack_notifier) {
  return {
    suggestDeployment: internals.suggestDeployment.bind(null, { git_service: git_service, slack_notifier: slack_notifier })
  };
};

internals.suggestDeployment = function (_ref, app_name, latest_tag_name, deployment_url) {
  var git_service = _ref.git_service,
      slack_notifier = _ref.slack_notifier;

  return git_service.getChangesBetweenTags(latest_tag_name).then(function (changelog) {
    if (!changelog) {
      return null;
    }
    return git_service.getLatestAuthorName().then(function (last_author) {
      var attachments = [internals.generateDeploymentSuggestionSlackAttachment(changelog, latest_tag_name)];
      var message = 'Hey, *' + last_author + '*. Might be a good time to deploy *' + app_name + '*.\n:package: ' + deployment_url;
      return slack_notifier.sendDeploymentMessage(message, attachments);
    });
  }).catch(function (err) {
    console.error('suggestDeployment failed', err);
    throw err;
  });
};

internals.generateDeploymentSuggestionSlackAttachment = function (changelog, latest_tag_name) {
  return {
    fallback: changelog,
    fields: [{
      title: 'Changes since ' + latest_tag_name,
      value: changelog,
      short: false
    }]
  };
};

/* istanbul ignore else */
if (process.env.NODE_ENV === 'test') {
  exports.internals = internals;
}
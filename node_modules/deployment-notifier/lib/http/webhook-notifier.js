'use strict';

var input_validator = require('@springworks/input-validator');
var joi = input_validator.joi;

var internals = {};

exports.create = function (request, webhook_url, basic_auth) {
  return {
    sendDeploymentMessage: internals.sendDeploymentMessage.bind(null, { request: request, webhook_url: webhook_url, basic_auth: basic_auth })
  };
};

var send_deployment_message_params_schema = joi.object().required().keys({
  app_name: joi.string().required(),
  revision: joi.string().required(),
  environment: joi.string().required(),
  changelog: joi.string().required().allow('')
});

internals.sendDeploymentMessage = function (_ref, app_name, revision, environment, changelog) {
  var request = _ref.request,
      webhook_url = _ref.webhook_url,
      basic_auth = _ref.basic_auth;

  return new Promise(function (resolve, reject) {
    var validated_params = input_validator.validateSchema({
      app_name: app_name, revision: revision, environment: environment, changelog: changelog
    }, send_deployment_message_params_schema);

    var req_body = internals.generateRequestBody(validated_params.app_name, validated_params.revision, validated_params.environment, validated_params.changelog);

    var req_opts = {
      method: 'post',
      url: webhook_url,
      json: req_body,
      auth: basic_auth
    };

    internals.sendRequest(request, req_opts, function (err, res) {
      if (err) {
        reject(err);
        return;
      } else if (res.statusCode >= 400) {
        reject(new Error('Failed to send deployment message to ' + req_opts.url + ', status code: ' + res.statusCode));
        return;
      }
      resolve();
    });
  });
};

internals.generateRequestBody = function (app_name, revision, environment, changelog) {
  return {
    application_name: app_name,
    changes: changelog,
    revision: revision,
    environment: environment
  };
};

internals.sendRequest = function (request, req_opts, callback) {
  request(req_opts, callback);
};

/* istanbul ignore else */
if (process.env.NODE_ENV === 'test') {
  exports.internals = internals;
}
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateId = generateId;
exports.getStatusCode = getStatusCode;
exports.getRootErrorId = getRootErrorId;
exports.isJoi = isJoi;
exports.toStringDebug = toStringDebug;

var _http = require('http');

var _util = require('util');

function generateId() {
  const alphabet = '0123456789abcdefghijklmnopqrstuvwxyz-_';
  const max = alphabet.length;
  let id = '';
  for (let i = 0; i < 10; i++) {
    id += alphabet.charAt(Math.floor(Math.random() * max));
  }
  return id;
}

function getStatusCode(code, cause) {
  if (typeof code === 'number' && code >= 400 && _http.STATUS_CODES[code]) {
    return code;
  }
  if (cause) {
    if (cause.output && cause.output.statusCode) {
      return getStatusCode(cause.output.statusCode, null);
    }
    if (isJoi(cause)) {
      return 422;
    }
  }
  return 500;
}

function getRootErrorId(root_error_id, cause) {
  if (typeof root_error_id === 'string' && root_error_id.length > 5) {
    return root_error_id;
  }
  if (cause) {
    return getRootErrorId(cause.root_error_id, undefined);
  }
  return undefined;
}

function isJoi(error) {
  return error instanceof Error && error.name === 'ValidationError' && Array.isArray(error.details);
}

function toStringDebug() {
  const has_annotate = typeof this.annotate === 'function';
  const details = has_annotate ? this.annotate() : (0, _util.format)('    %j', this.output.payload);
  return `Error: ${ this.code } ${ this.message }:\n${ details }`;
}
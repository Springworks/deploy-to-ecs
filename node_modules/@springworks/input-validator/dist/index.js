'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.joi = undefined;
exports.objectId = objectId;
exports.registrationNumber = registrationNumber;
exports.validateSchema = validateSchema;

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

var _errorFactory = require('@springworks/error-factory');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const OBJECTID_REGEX = /^[0-9a-fA-F]{24}$/;

exports.joi = _joi2.default;
function objectId() {
  return _joi2.default.string().regex(OBJECTID_REGEX);
}

function registrationNumber() {
  return _joi2.default.string().lowercase().replace(/\s+/g, '');
}

function validateSchema(params, schema, opt_resource_name, opt_options) {
  const default_options = {
    abortEarly: false,
    stripUnknown: false,
    convert: true,
    presence: 'optional'
  };
  const options = opt_options ? Object.assign({}, default_options, opt_options) : default_options;
  const validated = _joi2.default.validate(params, schema, options);

  if (validated.error) {
    throw (0, _errorFactory.createError)({ message: 'Validation Failed', cause: validated.error });
  }

  return validated.value;
}